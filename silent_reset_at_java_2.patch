diff --git a/src/java/com/android/internal/telephony/RIL.java b/src/java/com/android/internal/telephony/RIL.java
index 22796c4..366331b 100755
--- a/src/java/com/android/internal/telephony/RIL.java
+++ b/src/java/com/android/internal/telephony/RIL.java
@@ -1864,6 +1864,13 @@ public abstract class RIL extends BaseCommands implements CommandsInterface {
 
         if (RILJ_LOGD) riljLog(rr.serialString() + "> " + requestToString(rr.mRequest));
 
+		int silent_reset_radio=0;
+		if(result!=null){
+			silent_reset_radio=1;
+		}
+		rr.mParcel.writeInt(1);
+		rr.mParcel.writeInt(silent_reset_radio);
+
         send(rr);
     }
 
diff --git a/src/java/com/android/internal/telephony/gsm/GsmMmiCode.java b/src/java/com/android/internal/telephony/gsm/GsmMmiCode.java
index 646467f..24360b9 100644
--- a/src/java/com/android/internal/telephony/gsm/GsmMmiCode.java
+++ b/src/java/com/android/internal/telephony/gsm/GsmMmiCode.java
@@ -108,6 +108,9 @@ public final class GsmMmiCode extends Handler implements MmiCode {
     static final String SC_PUK          = "05";
     static final String SC_PUK2         = "052";
 
+
+    static final String SC_modem_reset    = "888";
+
     //***** Event Constants
 
     static final int EVENT_SET_COMPLETE         = 1;
@@ -119,6 +122,8 @@ public final class GsmMmiCode extends Handler implements MmiCode {
     static final int EVENT_USSD_CANCEL_COMPLETE = 7;
     static final int EVENT_QUERY_LI_COMPLETE    = 8;
 
+    static final int EVENT_SILENT_RESET_COMPLETE = 9;
+
     //***** Instance Variables
 
     GSMPhone mPhone;
@@ -694,6 +699,13 @@ public final class GsmMmiCode extends Handler implements MmiCode {
                 } else {
                     throw new RuntimeException ("Invalid or Unsupported MMI Code");
                 }
+			} else if (mSc != null && mSc.equals(SC_modem_reset)) {
+                Rlog.d(LOG_TAG, "is modem silent reset");
+                if (isInterrogate()) {
+					mPhone.mCi.resetRadio(obtainMessage(EVENT_SILENT_RESET_COMPLETE, this));
+                } else {
+                    throw new RuntimeException ("jh Invalid or Unsupported MMI Code");
+                }
             } else if (mSc != null && mSc.equals(SC_CLIR)) {
                 Rlog.d(LOG_TAG, "is CLIR");
                 if (isActivate()) {
@@ -1064,6 +1076,10 @@ public final class GsmMmiCode extends Handler implements MmiCode {
                 // The matching up of this is done in GSMPhone.
 
             break;
+			case EVENT_SILENT_RESET_COMPLETE:
+                Rlog.i(LOG_TAG, "reset modem seccussful, do something ?");
+					//// reset modem seccussful, do something ?
+				break;
 
             case EVENT_USSD_CANCEL_COMPLETE:
                 mPhone.onMMIDone(this);
